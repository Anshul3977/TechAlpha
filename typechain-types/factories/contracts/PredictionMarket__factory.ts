/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PredictionMarket,
  PredictionMarketInterface,
} from "../../contracts/PredictionMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_zetaToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcomeIndex",
        type: "uint256",
      },
    ],
    name: "BetPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "outcomes",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "resolutionTime",
        type: "uint256",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningOutcome",
        type: "uint256",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BET_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_question",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_outcomes",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "_resolutionTime",
        type: "uint256",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
    ],
    name: "getOutcomesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketBets",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outcomeIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketOutcomes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "resolutionTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "winningOutcome",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCrossChainCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_outcomeIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_winningOutcome",
        type: "uint256",
      },
    ],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zetaToken",
    outputs: [
      {
        internalType: "contract IZRC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161182238038061182283398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611736806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063e71c96971161008c578063f2e5502111610066578063f2e55021146101e0578063f2fde38b14610218578063f6c9eda01461022b578063fbc529cb1461023957600080fd5b8063e71c9697146101a3578063ec979082146101b6578063f0c68c1e146101cd57600080fd5b80638da5cb5b116100c85780638da5cb5b1461013c578063b1283e771461014d578063b402f1f514610170578063c85226911461019057600080fd5b806321e093b1146100ef578063605573331461011f578063715018a614610134575b600080fd5b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261012d366004611375565b61024c565b005b6101326103dd565b6000546001600160a01b0316610102565b61016061015b36600461135c565b6103f1565b604051610116949392919061145c565b61018361017e366004611375565b6104a7565b6040516101169190611449565b61013261019e3660046111bd565b610560565b6101326101b13660046113d0565b6107d6565b6101bf60055481565b604051908152602001610116565b6101bf6101db36600461135c565b610a61565b6101f36101ee366004611375565b610aa3565b604080516001600160a01b039094168452602084019290925290820152606001610116565b610132610226366004611199565b610aef565b6101bf662386f26fc1000081565b610132610247366004611268565b610b68565b610254610d28565b60008211801561026657506005548211155b61028b5760405162461bcd60e51b81526004016102829061148b565b60405180910390fd5b600082815260026020819052604090912001544210156102e45760405162461bcd60e51b8152602060048201526014602482015273546f6f206561726c7920746f207265736f6c766560601b6044820152606401610282565b60008281526002602052604090206003015460ff16156103165760405162461bcd60e51b8152600401610282906114b6565b60008281526003602052604090205481106103735760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642077696e6e696e67206f7574636f6d650000000000000000006044820152606401610282565b600082815260026020526040902060038101805460ff191660011790556004018190556103a08282610d82565b60408051838152602081018390527f6dfc24f0f2fb42e49fb4fa3ffa8abb148cab908a1fb8335b3f128a08b2594af1910160405180910390a15050565b6103e5610d28565b6103ef6000610f90565b565b60026020526000908152604090208054819061040c90611653565b80601f016020809104026020016040519081016040528092919081815260200182805461043890611653565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b50505050600283015460038401546004909401549293909260ff909116915084565b600360205281600052604060002081815481106104c357600080fd5b906000526020600020016000915091505080546104df90611653565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90611653565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b505050505081565b6001546001600160a01b038581169116146105b35760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2102d29219918103a37b5b2b760691b6044820152606401610282565b600080806105c384860186611397565b9250925092506000831180156105db57506005548311155b6105f75760405162461bcd60e51b81526004016102829061148b565b600086116106175760405162461bcd60e51b8152600401610282906114ed565b6000838152600260208190526040909120015442106106735760405162461bcd60e51b815260206004820152601860248201527710995d1d1a5b99c81c195c9a5bd9081a185cc8195b99195960421b6044820152606401610282565b60008381526002602052604090206003015460ff16156106a55760405162461bcd60e51b8152600401610282906114b6565b60008381526003602052604090205482106106fa5760405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606401610282565b600061070d662386f26fc100008861163c565b60008581526004602090815260408083208151606080820184526001600160a01b038981168084528387018981528487018d8152865460018082018955978b529989902095516003909a0290950180546001600160a01b03191699909316989098178255965193810193909355905160029092019190915581518981529283019390935281018390529081018590529091507f1b8a9031cb9351278d70a994f81536e9e08c91162e64f92b2fe4766fb7a891b49060800160405180910390a15050505050505050565b6000831180156107e857506005548311155b6108045760405162461bcd60e51b81526004016102829061148b565b600081116108245760405162461bcd60e51b8152600401610282906114ed565b6000838152600260208190526040909120015442106108805760405162461bcd60e51b815260206004820152601860248201527710995d1d1a5b99c81c195c9a5bd9081a185cc8195b99195960421b6044820152606401610282565b60008381526002602052604090206003015460ff16156108b25760405162461bcd60e51b8152600401610282906114b6565b60008381526003602052604090205482106109075760405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606401610282565b600061091a662386f26fc10000836115e3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611246565b506000848152600460209081526040808320815160608082018452338083528286018981528386018b8152855460018082018855968a52988890209451600390990290940180546001600160a01b0319166001600160a01b039099169890981788555193870193909355905160029095019490945581518881529283015281018490529081018490527f1b8a9031cb9351278d70a994f81536e9e08c91162e64f92b2fe4766fb7a891b49060800160405180910390a150505050565b60008082118015610a7457506005548211155b610a905760405162461bcd60e51b81526004016102829061148b565b5060009081526003602052604090205490565b60046020528160005260406000208181548110610abf57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915083565b610af7610d28565b6001600160a01b038116610b5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610282565b610b6581610f90565b50565b428111610bc55760405162461bcd60e51b815260206004820152602560248201527f5265736f6c7574696f6e2074696d65206d75737420626520696e207468652066604482015264757475726560d81b6064820152608401610282565b600282511015610c175760405162461bcd60e51b815260206004820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152606401610282565b60058054906000610c278361168e565b90915550506040805160a081018252848152602080820185905281830184905260006060830181905260808301819052600554815260028252929092208151805192939192610c799284920190610fe0565b506020828101518051610c929260018501920190611064565b50604082810151600283015560608301516003808401805460ff19169215159290921790915560809093015160049092019190915560055460009081526020928352208351610ce392850190611064565b507fdb6ae5c511cd814e8b6d7dd1f64d32f3bd488e4361486cdcfa2e2debaeddca87600554848484604051610d1b9493929190611531565b60405180910390a1505050565b6000546001600160a01b031633146103ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610282565b60008281526004602052604081209080805b8354811015610e3d57838181548110610daf57610daf6116bf565b90600052602060002090600302016001015483610dcc91906115e3565b925084848281548110610de157610de16116bf565b9060005260206000209060030201600201541415610e2b57838181548110610e0b57610e0b6116bf565b90600052602060002090600302016001015482610e2891906115e3565b91505b80610e358161168e565b915050610d94565b508015610f895760005b8354811015610f875784848281548110610e6357610e636116bf565b9060005260206000209060030201600201541415610f755760008284868481548110610e9157610e916116bf565b906000526020600020906003020160010154610ead919061161d565b610eb791906115fb565b60015486549192506001600160a01b03169063a9059cbb90879085908110610ee157610ee16116bf565b600091825260209091206003909102015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f729190611246565b50505b80610f7f8161168e565b915050610e47565b505b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610fec90611653565b90600052602060002090601f01602090048101928261100e5760008555611054565b82601f1061102757805160ff1916838001178555611054565b82800160010185558215611054579182015b82811115611054578251825591602001919060010190611039565b506110609291506110bd565b5090565b8280548282559060005260206000209081019282156110b1579160200282015b828111156110b157825180516110a1918491602090910190610fe0565b5091602001919060010190611084565b506110609291506110d2565b5b8082111561106057600081556001016110be565b808211156110605760006110e682826110ef565b506001016110d2565b5080546110fb90611653565b6000825580601f1061110b575050565b601f016020900490600052602060002090810190610b6591906110bd565b600082601f83011261113a57600080fd5b813567ffffffffffffffff811115611154576111546116d5565b611167601f8201601f19166020016115b2565b81815284602083860101111561117c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156111ab57600080fd5b81356111b6816116eb565b9392505050565b600080600080606085870312156111d357600080fd5b84356111de816116eb565b935060208501359250604085013567ffffffffffffffff8082111561120257600080fd5b818701915087601f83011261121657600080fd5b81358181111561122557600080fd5b88602082850101111561123757600080fd5b95989497505060200194505050565b60006020828403121561125857600080fd5b815180151581146111b657600080fd5b60008060006060848603121561127d57600080fd5b833567ffffffffffffffff8082111561129557600080fd5b6112a187838801611129565b94506020915081860135818111156112b857600080fd5b8601601f810188136112c957600080fd5b8035828111156112db576112db6116d5565b8060051b6112ea8582016115b2565b8281528581019084870183860188018d101561130557600080fd5b60009350835b8581101561134257813588811115611321578586fd5b61132f8f8b838b0101611129565b855250928801929088019060010161130b565b505080985050505050505050604084013590509250925092565b60006020828403121561136e57600080fd5b5035919050565b6000806040838503121561138857600080fd5b50508035926020909101359150565b6000806000606084860312156113ac57600080fd5b833592506020840135915060408401356113c5816116eb565b809150509250925092565b6000806000606084860312156113e557600080fd5b505081359360208301359350604090920135919050565b6000815180845260005b8181101561142257602081850181015186830182015201611406565b81811115611434576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006111b660208301846113fc565b60808152600061146f60808301876113fc565b6020830195909552509115156040830152606090910152919050565b602080825260119082015270125b9d985b1a59081b585c9ad95d081251607a1b604082015260600190565b60208082526017908201527f4d61726b657420616c7265616479207265736f6c766564000000000000000000604082015260600190565b60208082526024908201527f42657420616d6f756e74206d7573742062652067726561746572207468616e206040820152637a65726f60e01b606082015260800190565b8481526000602060808184015261154b60808401876113fc565b8381036040850152855180825282820190600581901b8301840184890160005b8381101561159957601f198684030185526115878383516113fc565b9487019492509086019060010161156b565b5050809550505050505082606083015295945050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156115db576115db6116d5565b604052919050565b600082198211156115f6576115f66116a9565b500190565b60008261161857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611637576116376116a9565b500290565b60008282101561164e5761164e6116a9565b500390565b600181811c9082168061166757607f821691505b6020821081141561168857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116a2576116a26116a9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b6557600080fdfea26469706673582212206b12afea5b79828df5712b8d7b60be02482f6b3092fe40d33b4f8c7f5e31772d64736f6c63430008070033";

type PredictionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionMarket__factory extends ContractFactory {
  constructor(...args: PredictionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _zetaToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_zetaToken, overrides || {});
  }
  override deploy(
    _zetaToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_zetaToken, overrides || {}) as Promise<
      PredictionMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PredictionMarket__factory {
    return super.connect(runner) as PredictionMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionMarketInterface {
    return new Interface(_abi) as PredictionMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PredictionMarket {
    return new Contract(address, _abi, runner) as unknown as PredictionMarket;
  }
}
